{
    "openapi": "3.0.0",
    "info": {
      "title": "MediaPortal_API",
      "description": "The MediaPortal service provides authentication and files data.",
      "version": "v1.0"
    },
    "paths": {
      "/Account/login": {
        "post": {
          "tags": [
            "Account"
          ],
          "summary": "Authenticate user based on credentials",
          "description": "Username and password requested",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/Account/signup": {
        "post": {
          "tags": [
            "Account"
          ],
          "summary": "Register new user account",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RegistrationResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/Account/checkUsername": {
        "post": {
          "tags": [
            "Account"
          ],
          "summary": "Checks if username is valid",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckUsernameRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CheckUsernameResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            }
          }
        }
      },
      "/Account/changePassword": {
        "post": {
          "tags": [
            "Account"
          ],
          "summary": "Change password of currently logged user",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordChangeRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Incorrect password"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "LoginRequest": {
          "required": [
            "username",
            "password"
          ],
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "description": "Username",
              "nullable": true,
              "example": "user233"
            },
            "password": {
              "type": "string",
              "description": "Password",
              "example": "user_password"
            }
          },
          "additionalProperties": false,
          "description": "Representation of user credential"
        },
        "LoginResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "UserAccountId",
              "format": "int32",
              "example": 1
            },
            "username": {
              "type": "string",
              "description": "Username",
              "nullable": true,
              "example": "user233"
            }
          },
          "additionalProperties": false,
          "description": "Logged user information"
        },
        "PasswordChangeRequest": {
          "required": [
            "newPassword",
            "oldPassword"
          ],
          "type": "object",
          "properties": {
            "oldPassword": {
              "type": "string",
              "description": "Old password",
              "example": "old_password"
            },
            "newPassword": {
              "type": "string",
              "description": "New Password",
              "example": "user_password"
            }
          },
          "additionalProperties": false,
          "description": "Representation of user credential"
        },
        "CheckUsernameRequest": {
          "required": [
            "username"
          ],
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "description": "Username",
              "nullable": true,
              "example": "user233"
            }
          },
          "additionalProperties": false,
          "description": "Checks username valid"
        },
        "CheckUsernameResponse": {
          "type": "object",
          "properties": {
            "isValid": {
              "type": "boolean",
              "default": false, 
              "example": false
            }
          },
          "additionalProperties": false,
          "description": "Checks username valid"
        },
        "RegistrationRequest": {
          "required": [
            "username",
            "email",
            "password"
          ],
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "description": "Username",
              "nullable": true,
              "example": "user233"
            },
            "email": {
              "type": "string",
              "description": "Email address",
              "format": "email",
              "example": "user233@test.com"
            },
            "password": {
              "type": "string",
              "description": "Password for the customer admin account",
              "example": "password"
            }
          },
          "additionalProperties": false,
          "description": "User registration information"
        },
        "RegistrationResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "UserAccountId",
              "format": "int32",
              "example": 1
            },
            "username": {
              "type": "string",
              "description": "Username",
              "nullable": true,
              "example": "user233"
            }
          },
          "additionalProperties": false,
          "description": "Registered user information"
        }
      }
    },
    "tags": [
      {
        "name": "Account",
        "description": "Account/user related operations"
      }
    ]
  }